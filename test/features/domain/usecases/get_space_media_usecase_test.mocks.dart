// Mocks generated by Mockito 5.0.16 from annotations
// in nasa_apod/test/features/domain/usecases/get_space_media_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:either_dart/either.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nasa_apod/core/errors/failures.dart' as _i6;
import 'package:nasa_apod/features/domain/entities/space_media_entity.dart'
    as _i5;
import 'package:nasa_apod/features/domain/repositories/space_media_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [SpaceMediaRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpaceMediaRepository extends _i1.Mock
    implements _i3.SpaceMediaRepository {
  MockSpaceMediaRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.SpaceMediaEntity, _i6.Failure>> getSpaceMedia(
          DateTime? date) =>
      (super.noSuchMethod(Invocation.method(#getSpaceMedia, [date]),
              returnValue:
                  Future<_i2.Either<_i5.SpaceMediaEntity, _i6.Failure>>.value(
                      _FakeEither_0<_i5.SpaceMediaEntity, _i6.Failure>()))
          as _i4.Future<_i2.Either<_i5.SpaceMediaEntity, _i6.Failure>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Failure].
///
/// See the documentation for Mockito's code generation for more information.
class MockFailure extends _i1.Mock implements _i6.Failure {
  MockFailure() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Object?> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object?>[])
          as List<Object?>);
  @override
  String toString() => super.toString();
}
